name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: lta-datamall-api  # set this to the name of your Azure Web App
  DOCKER_IMAGE_NAME: lta-datamall-api
  
on:
  push:
    paths-ignore:
      - 'README.md'
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3
      
    - name: 'Login Azure Container Registry'
      uses: azure/docker-login@v1
      with:
        login-server: tsbsia.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        
    - name: 'Build Docker image'
      run: docker build ./src --tag tsbsia.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
      
    - name: 'Publish to Azure Container Registry'
      run: docker push tsbsia.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} 
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: 'tsbsia.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}'

    - name: Discord and Telegram notification
      uses: hunghg255/action-notifications@master
      with:
        discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
        telegram_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        telegram_chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
        title: "Deploy to Azure Web App"
        description: "New version of ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha}} has been deployed to https://lta-datamall-api.azurewebsites.net"
